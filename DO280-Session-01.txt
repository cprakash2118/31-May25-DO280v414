******************
#### Point-01

# Product Name - Red Hat OpenShift 

https://www.redhat.com/en/technologies/cloud-computing/openshift
https://www.redhat.com/en/resources/2023-forrester-wave-multicloud-container-platform
https://reprints2.forrester.com/#/assets/2/431/RES178526/report


# Product Vesion - As of now 4.18 (Current).
  FYI- Training & exams - version - 414
# DO280v414 -> EX280v414 
# Product Editions:-

1-) Cloud services editions
 - Red Hat OpenShift Service on AWS   [ Platform=AWS, POC=AWS, BackedSupport=AWS/RH ]- https://aws.amazon.com/rosa
 - Microsoft Azure Red Hat OpenShift  [ Platform=Azure, POC=Azure, BackedSupport=MS-Azure/RH ] 
 - Red Hat OpenShift Dedicated        [ Platform=GCP/AWS, POC=RedHat, BackedSupport=GCP/AWS ]
 - Red Hat OpenShift on IBM Cloud     [ Platform=IBM, POC=IBM, BackedSupport=IBM/RH ]

2-) Self-managed editions
 - Red Hat OpenShift Kubernetes Engine       [ basic ]
 - Red Hat OpenShift Container Platform      [ Standard ]
 - Red Hat OpenShift Platform Plus           [ Add on Services ]
 - Red Hat OpenShift Virtualization Engine   [ OCP Virtualization ]
 
3-) Services & add-ons
 - Red Hat OpenShift AI  [AI267/EX267]
 - Red Hat OpenShift Lightspeed
 - Red Hat OpenShift Virtualization [DO316/346/336->EX316]
 - Red Hat Quay
 - Red Hat Advanced Cluster Management for Kubernetes [DO480/EX480]
 - Red Hat Advanced Cluster Security for Kubernetes   [DO430/EX430]
 - Red Hat Advanced Developer Suite
 - Red Hat OpenShift Consulting
 
 https://www.redhat.com/en/resources/openshift-skill-paths-datasheet
 
 Red Hat Certified OpenShift Architect:-
 https://www.redhat.com/en/services/certification/red-hat-certified-openshift-architect
 https://www.redhat.com/en/services/certification/red-hat-certified-openshift-architect?pfe-bjtfzkwfa=exams
 
-1# DO280/EX280  - Must and required 
Then any 4 from above list 


******************
#### Point-02 - Classroom Environment:-
-1) User Details:-
    Login to VMs/Servers.
    - student/student [also having sudo access ]
    - root/redhat 
	
	Login to OCP cluster.
	FYI- What required for login to OCP cluster.
	userName ; password ; API URL/Web Console URL.
	
	CLI - (From Win/Linux/Mac etc) 
	- admin/redhatocp  [cluster-admin - it means same as root account in your Linux env]
	- developer/developer [ member account ]
    - Default user account w.r.t OCP cluster [kubeadmin/password-location ; this account is cluster-admin]
	  As per OpenShift LAB env - on utility.lab.example.com ; location - /home/lab/ocp4/auth/
	  $ ssh utility.lab.example.com -l root 
	  # cd /home/lab/ocp4/auth/
	  # ls
	  kubeconfig kubeadmin-password 
	  # cat kubeconfig | grep server 
	  https://api.ocp4.example.com:6443 
	  # cat kubeadmin-password ; echo 
	
    $ oc login -u username -p password API-URL 	
	$ oc login -u admin -p redhatocp https://api.ocp4.example.com:6443 
	
	https://api.clusterName.BaseDomain:6443 
	https://api.ocp4.example.com:6443
	
	clusterName=ocp4
	baseDomain=example.com 
	port=6443 (with respect to LB - utility).
	
	Example:-
	Banking application = CITI
	BaseDomain - citi.com 
	Cluster1=ocp4-apac
    Cluster2=ocp4-emea 
	Cluster3=ocp4-na 
	
	API URL - https://api.ocp4-apac.citi.com:6443 
	API URL - https://api.ocp4-emea.citi.com:6443 
	API URL - https://api.ocp4.example.com:6443 
	
	Web Console:-
	https://appName-namespaceName.apps.clusterName.BaseDomain
	https://console-openshift-console.apps.ocp4.example.com 
	
	
2-) Network Domain:-
    Network Name           IP Range            Domain Name 
     student network     172.25.250.0/24      lab.example.com 
	 Cluster Network     192.168.50.0/24      ocp4.example.com 
	 classroom Network   172.25.252.0/24      example.com 
	
3-) VMs/Servers details:-
    workstation.lab.example.com    - jump server (GUI).
	utility.lab.example.com        - connect student n/w to cluster network, HAproxy, DNS, DHCP, NFS, PXE/KickStart/Apache etc.
	master01.lab.example.com       - master/worker node 
	
	
	master01-03.lab.example.com 
	worker01-N.lab.example.com 
	
	OCP cluster - master & worker node [worker node -> storage/infra/custom/abc etc ]


#Unit-3#-  Authentication and Authorization:-
- Configure Identity Providers
- Define and Apply Permissions with RBAC


- Configure Identity Providers:-
1-# Login to OCP cluster.
2-# How many way to login to OCP cluster.
3-# Login to OCP cluster via identity provider (IdP=htpasswd).
4-# Update/deleting users (via IdP=htpasswd) - secret creation, Oauth services, backed process for authentication.
5-# RBAC [rules, roles, bindings-clusterrolebinding/rolebinding].

Task-01:
user1-5/password  ; file-name=htpasswd-upload-file ; secretName=htpasswd-secret-devops ; IdP Name = DevOPs-Team

Step-1:- Create users/password database for user1-5 (username & password information)

$ htpasswd --help  
$ htpasswd -c -B -b htpasswd-upload-file user1 password 
$ ls 
$ cat htpasswd-upload-file
user1:ksadhlkasjdlkasjd;lkajslkfjslkdjlsakjdlas

$ htpasswd -B -b htpasswd-upload-file user2 password
$ htpasswd -B -b htpasswd-upload-file user3 password
$ htpasswd -B -b htpasswd-upload-file user4 password
$ htpasswd -B -b htpasswd-upload-file user5 password

FYI- Locally as of now, inject into OCP cluster via secret.

Step-2:- Create secret for users/password datails.
$ oc login -u admin -p redhatocp https://api.ocp4.example.com:6443 
$ oc whoami 
$ oc status 
$ oc version 
$ oc whoami --show-console 
https://console-openshift-console.apps.ocp4.example.com


$ oc create secret <tab>
generic   - from-file, from-variable  
docker-registry - registry url 
tls - Certificates 

$ oc create secret generic htpasswd-secret-devops --from-file htpasswd=htpasswd-upload-file -n openshift-config 
$ oc get secret -n openshift-config
$ oc get secret -n openshift-config -o yaml/json 


Step-3:- Updating the Oaauth services [Oaauth is an authentication service for OCP cluster]
$ oc get oauth/cluster -o yaml > oauth.yaml 
$ vim oauth.yaml 
https://docs.redhat.com/en/documentation/openshift_container_platform/4.13/pdf/authentication_and_authorization/OpenShift_Container_Platform-4.13-Authentication_and_authorization-en-US.pdf

identityProviders:
- name: idp-htpasswd-devops 
  mappingMethod: claim 
  type: HTPasswd
  htpasswd:
    fileData:
      name: htpasswd-secret-devops
	  
$ oc apply -f oauth.yaml 

$ oc get pods -n openshift-authentication
 







































	
	
	
	






